{"version":3,"file":"build/928.ae327af70280ce55cf14.js","mappings":"yKAEe,SAASA,EAASC,GAAiD,IAAhD,WAAEC,EAAU,OAAEC,EAAM,KAAEC,EAAI,SAAEC,EAAQ,OAAEC,GAAQL,EAC9E,MAAOM,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,KACtCC,EAAYC,IAAiBF,EAAAA,EAAAA,UAAS,KAE7CG,EAAAA,EAAAA,YAAU,KACR,GAAKR,IAAQA,aAAI,EAAJA,EAAMS,QAAS,GAAuB,KAAjBT,aAAI,EAAJA,EAAMS,QAAc,CACpD,MAAMC,EAAgB,IAAIV,GAAMW,MAAK,CAACC,EAAGC,IAAM,IAAIC,KAAKF,EAAEG,YAAc,IAAID,KAAKD,EAAEE,cAC/EC,KAAKC,UAAUP,KAAmBM,KAAKC,UAAUd,IACnDC,EAAcM,EAElB,IACC,CAACV,EAAMG,KAMVK,EAAAA,EAAAA,YAAU,KACR,IACE,MAAMU,EAAgB,GACtB,IAAK,IAAIC,EAAI,EAAGA,EAAIhB,EAAWM,OAAQU,IAAK,CAC1C,MAAMC,EAAY,CAAC,EACnB,IAAK,IAAIC,EAAI,EAAGA,EAAItB,EAAOU,OAAQY,IAAK,KAAAC,EACtC,MAAMC,EAAQxB,EAAOsB,GACfG,EAASrB,EAAWgB,GAAGI,GAASE,OAAOtB,EAAWgB,GAAGI,IAAUrB,EAAgD,QAA1CoB,EAAGJ,EAAcA,EAAcT,OAAS,UAAE,IAAAa,GAAS,QAATA,EAAvCA,EAA0CC,UAAM,IAAAD,OAAA,EAAhDA,EAAkDI,EAChIN,EAAUG,GAAS,CACjBI,EAAGC,KAAKC,MAAM,IAAIf,KAAKX,EAAWgB,GAAGJ,YAAYe,WACjDJ,EAAGF,EAEP,CACAN,EAAca,KAAKX,EACrB,CACAb,EAAcW,EAChB,CAAE,MAAOc,GACPC,QAAQD,MAAMA,GACdzB,EAAc,GAChB,IAEC,CAACJ,EAAYJ,IAEhB,MAAMmC,EAAQ,CACZC,SAAUpC,EAAOqC,KAAI,CAACb,EAAOc,KAAU,CACrCC,KAAMxC,EAAWuC,GACjBrC,KAAMM,EAAW8B,KAAKG,GAAMA,EAAEhB,UAKlC,MAAwB,mBAAbtB,EACFA,EAAS,CAAEiC,UAIb,IACT,CCrDA,MAqBA,EArBuBrC,IAA+C,IAA9C,MAAE0B,EAAK,WAAEiB,EAAU,mBAAEC,GAAoB5C,EAE/D,OACE6C,EAAAA,cAAAA,EAAAA,SAAA,KACGnB,EACCmB,EAAAA,cAAC9C,EAAS,CACRE,WAAY0C,EAAW1C,WACvBC,OAAQyC,EAAWzC,OACnBC,KAAMuB,EACNrB,OAAQsC,EAAWtC,OACnByC,QAASH,EAAWG,UAEnBC,IAAA,IAAC,MAAEV,GAAOU,EAAA,OACTH,EAAmB,CAAEzC,KAAMkC,EAAOW,MAAOL,EAAWK,MAAOC,KAAMN,EAAWM,MAAO,IAGrF,KACH,C","sources":["webpack://inkjet-dashboard-app/./src/layouts/coating/components/CoatingDetailsTable/data/ChartData.js","webpack://inkjet-dashboard-app/./src/layouts/coating/components/CoatingDetailsTable/data/components/ChartComponent.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport default function ChartData({ fieldNames, fields, data, children, divide }) {\n  const [sortedData, setSortedData] = useState([]);\n  const [dataPoints, setDataPoints] = useState([]);\n\n  useEffect(() => {\n    if ((data && data?.length > 0) || data?.length === 0) {\n      const newSortedData = [...data].sort((a, b) => new Date(a.created_at) - new Date(b.created_at));\n      if (JSON.stringify(newSortedData) !== JSON.stringify(sortedData)) {\n        setSortedData(newSortedData);\n      }\n    }\n  }, [data, sortedData]);\n\n  //const dData = useMemo(() => {\n  //  return data?.filter((item) => fields.includes(item.name));\n  //}, [data, fields]);\n\n  useEffect(() => {\n    try {\n      const newDataPoints = [];\n      for (let i = 0; i < sortedData.length; i++) {\n        const datapoint = {};\n        for (let j = 0; j < fields.length; j++) {\n          const field = fields[j];\n          const yValue = sortedData[i][field] ? Number(sortedData[i][field]) / divide : newDataPoints[newDataPoints.length - 1]?.[field]?.y;\n          datapoint[field] = {\n            x: Math.floor(new Date(sortedData[i].created_at).getTime()),\n            y: yValue,\n          };\n        }\n        newDataPoints.push(datapoint);\n      }\n      setDataPoints(newDataPoints);\n    } catch (error) {\n      console.error(error);\n      setDataPoints([]); // Set an empty array in case of an error\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sortedData, fields]);\n\n  const ddata = {\n    datasets: fields.map((field, index) => ({\n      name: fieldNames[index],\n      data: dataPoints.map((d) => d[field]),\n    })),\n  };\n\n  // Ensure that children is a function and call it with the formatted data\n  if (typeof children === \"function\") {\n    return children({ ddata });\n  }\n\n  // Return null if children is not provided or not a function\n  return null;\n}\n","import React from 'react';\nimport ChartData from '../ChartData';\n\nconst ChartComponent = ({ field, chartProps, renderDetailsChart }) => {\n\n  return (\n    <>\n      {field ? (\n        <ChartData\n          fieldNames={chartProps.fieldNames}\n          fields={chartProps.fields}\n          data={field}\n          divide={chartProps.divide}\n          reverse={chartProps.reverse}\n        >\n          {({ ddata }) =>\n            renderDetailsChart({ data: ddata, title: chartProps.title, ymax: chartProps.ymax })\n          }\n        </ChartData>\n      ) : null}\n    </>\n  );\n};\n\nexport default ChartComponent;\n"],"names":["ChartData","_ref","fieldNames","fields","data","children","divide","sortedData","setSortedData","useState","dataPoints","setDataPoints","useEffect","length","newSortedData","sort","a","b","Date","created_at","JSON","stringify","newDataPoints","i","datapoint","j","_newDataPoints","field","yValue","Number","y","x","Math","floor","getTime","push","error","console","ddata","datasets","map","index","name","d","chartProps","renderDetailsChart","React","reverse","_ref2","title","ymax"],"sourceRoot":""}