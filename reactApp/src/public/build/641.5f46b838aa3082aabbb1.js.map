{"version":3,"file":"build/641.5f46b838aa3082aabbb1.js","mappings":"0JAEe,SAASA,EAASC,GAA0D,IAAzD,WAAEC,EAAU,OAAEC,EAAM,KAAEC,EAAI,SAAEC,EAAQ,OAAEC,EAAM,QAAEC,GAASN,EACvF,MAAOO,EAAYC,IAAiBC,EAAAA,EAAAA,UAAS,KACtCC,EAAYC,IAAiBF,EAAAA,EAAAA,UAAS,KAE7CG,EAAAA,EAAAA,YAAU,KACR,GAAKT,IAAQA,aAAI,EAAJA,EAAMU,QAAS,GAAuB,KAAjBV,aAAI,EAAJA,EAAMU,QAAc,CACpD,MAAMC,EAAgB,IAAIX,GAAMY,MAAK,CAACC,EAAGC,IAAM,IAAIC,KAAKF,EAAEG,YAAc,IAAID,KAAKD,EAAEE,cAC/EC,KAAKC,UAAUP,KAAmBM,KAAKC,UAAUd,IACnDC,EAAcM,EAElB,IACC,CAACX,EAAMI,KAMVK,EAAAA,EAAAA,YAAU,KACR,IACE,MAAMU,EAAgB,GACtB,IAAK,IAAIC,EAAI,EAAGA,EAAIhB,EAAWM,OAAQU,IAAK,CAC1C,MAAMC,EAAY,CAAC,EACnB,IAAK,IAAIC,EAAI,EAAGA,EAAIvB,EAAOW,OAAQY,IAAK,KAAAC,EACtC,MAAMC,EAAQzB,EAAOuB,GACfG,EAASrB,EAAWgB,GAAGI,GAASE,OAAOtB,EAAWgB,GAAGI,IAAUtB,EAAgD,QAA1CqB,EAAGJ,EAAcA,EAAcT,OAAS,UAAE,IAAAa,GAAS,QAATA,EAAvCA,EAA0CC,UAAM,IAAAD,OAAA,EAAhDA,EAAkDI,EAG9HN,EAAUG,GADRrB,EACiB,CACjByB,EAAGC,KAAKC,MAAM,IAAIf,KAAKX,EAAWgB,GAAGJ,YAAYe,WACjDJ,EAAG,IAAOF,GAGO,CACjBG,EAAGC,KAAKC,MAAM,IAAIf,KAAKX,EAAWgB,GAAGJ,YAAYe,WACjDJ,EAAGF,EAGT,CACAN,EAAca,KAAKX,EACrB,CACAb,EAAcW,EAChB,CAAE,MAAOc,GACPC,QAAQD,MAAMA,GACdzB,EAAc,GAChB,IAEC,CAACJ,EAAYL,IAEhB,MAAMoC,EAAQ,CACZC,SAAUrC,EAAOsC,KAAI,CAACb,EAAOc,KAAU,CACrCC,KAAMzC,EAAWwC,GACjBtC,KAAMO,EAAW8B,KAAKG,GAAMA,EAAEhB,UAKlC,MAAwB,mBAAbvB,EACFA,EAAS,CAAEkC,UAIb,IACT,C,mGC1DA,MAuBA,EAvBuBtC,IAA8C,IAA7C,MAAE2B,EAAK,WAAEiB,EAAU,mBAAEC,GAAmB7C,EAC9D,MAAM,IAAE8C,IAAQC,EAAAA,EAAAA,YAAWC,EAAAA,GAC3B,OACEC,EAAAA,cAACC,EAAAA,EAAI,CAACC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,GAC5BL,EAAAA,cAACM,EAAAA,EAAK,CAACC,GAAI,GACRV,EAAInB,GACHsB,EAAAA,cAAClD,EAAAA,EAAS,CACRE,WAAY2C,EAAW3C,WACvBC,OAAQ0C,EAAW1C,OACnBC,KAAM2C,EAAInB,GACVtB,OAAQuC,EAAWvC,OACnBC,QAASsC,EAAWtC,UAEnBmD,IAAA,IAAC,MAAEnB,GAAOmB,EAAA,OACTZ,EAAmB,CAAE1C,KAAMmC,EAAOoB,MAAOd,EAAWc,MAAOC,KAAMf,EAAWe,MAAO,IAGrF,MAED,C","sources":["webpack://inkjet-dashboard-app/./src/layouts/coating/components/RealtimeTable/data/ChartData.js","webpack://inkjet-dashboard-app/./src/layouts/coating/components/RealtimeTable/data/components/Nk2Data.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport default function ChartData({ fieldNames, fields, data, children, divide, reverse }) {\n  const [sortedData, setSortedData] = useState([]);\n  const [dataPoints, setDataPoints] = useState([]);\n\n  useEffect(() => {\n    if ((data && data?.length > 0) || data?.length === 0) {\n      const newSortedData = [...data].sort((a, b) => new Date(a.created_at) - new Date(b.created_at));\n      if (JSON.stringify(newSortedData) !== JSON.stringify(sortedData)) {\n        setSortedData(newSortedData);\n      }\n    }\n  }, [data, sortedData]);\n\n  // const dData = useMemo(() => {\n  //   return data?.filter((item) => fields.includes(item.name));\n  // }, [data, fields]);\n\n  useEffect(() => {\n    try {\n      const newDataPoints = [];\n      for (let i = 0; i < sortedData.length; i++) {\n        const datapoint = {};\n        for (let j = 0; j < fields.length; j++) {\n          const field = fields[j];\n          const yValue = sortedData[i][field] ? Number(sortedData[i][field]) / divide : newDataPoints[newDataPoints.length - 1]?.[field]?.y;\n\n          if (reverse) {\n            datapoint[field] = {\n              x: Math.floor(new Date(sortedData[i].created_at).getTime()),\n              y: 3000 / yValue,\n            };\n          } else {\n            datapoint[field] = {\n              x: Math.floor(new Date(sortedData[i].created_at).getTime()),\n              y: yValue,\n            };\n          }\n        }\n        newDataPoints.push(datapoint);\n      }\n      setDataPoints(newDataPoints);\n    } catch (error) {\n      console.error(error);\n      setDataPoints([]); // Set an empty array in case of an error\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [sortedData, fields]);\n\n  const ddata = {\n    datasets: fields.map((field, index) => ({\n      name: fieldNames[index],\n      data: dataPoints.map((d) => d[field]),\n    })),\n  };\n\n  // Ensure that children is a function and call it with the formatted data\n  if (typeof children === \"function\") {\n    return children({ ddata });\n  }\n\n  // Return null if children is not provided or not a function\n  return null;\n}\n","import React, { useContext } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport MDBox from '../../../../../../components/MDBox';\nimport { NK2Context } from '../../../../../../lib/realtime/coating/nk2';\nimport ChartData from '../ChartData';\n\nconst ChartComponent = ({ field, chartProps, renderDetailsChart}) => {\n  const { nk2 } = useContext(NK2Context);\n  return (\n    <Grid item xs={12} md={6} lg={6}>\n      <MDBox mb={3}>\n        {nk2[field] ? (\n          <ChartData\n            fieldNames={chartProps.fieldNames}\n            fields={chartProps.fields}\n            data={nk2[field]}\n            divide={chartProps.divide}\n            reverse={chartProps.reverse}\n          >\n            {({ ddata }) =>\n              renderDetailsChart({ data: ddata, title: chartProps.title, ymax: chartProps.ymax })\n            }\n          </ChartData>\n        ) : null}\n      </MDBox>\n    </Grid>\n  );\n};\n\nexport default ChartComponent;\n"],"names":["ChartData","_ref","fieldNames","fields","data","children","divide","reverse","sortedData","setSortedData","useState","dataPoints","setDataPoints","useEffect","length","newSortedData","sort","a","b","Date","created_at","JSON","stringify","newDataPoints","i","datapoint","j","_newDataPoints","field","yValue","Number","y","x","Math","floor","getTime","push","error","console","ddata","datasets","map","index","name","d","chartProps","renderDetailsChart","nk2","useContext","NK2Context","React","Grid","item","xs","md","lg","MDBox","mb","_ref2","title","ymax"],"sourceRoot":""}